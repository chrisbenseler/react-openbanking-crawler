{"version":3,"sources":["services/api.js","InstitutionsContext.js","pages/Institutions.js","pages/Institution.js","App.js","reportWebVitals.js","index.js"],"names":["listInstitutions","a","fetch","process","resp","json","InstitutionsContext","React","createContext","items","loaded","InstitutionsProvider","Provider","Institutions","useContext","state","map","item","to","id","name","Institution","useParams","useState","current","setCurrent","useEffect","find","Layout","setState","path","App","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAGMA,G,cAAgB,uCAAG,4BAAAC,EAAA,sEACFC,MAAM,GAAD,OAHbC,oCAGa,kBADH,cACfC,EADe,gBAERA,EAAKC,OAFG,mFAAH,sDCDhBC,EAAsBC,IAAMC,cAAc,CAAEC,MAAO,GAAIC,QAAQ,IAE/DC,EAAuBL,EAAoBM,S,OCiBlCC,MAjBf,WAAyB,IAAD,EACNC,qBAAWR,GAApBS,EADe,oBAGtB,OACE,oCACE,wCACA,6BACGA,EAAMN,MAAMO,KAAI,SAACC,GAAD,OACf,6BACE,cAAC,IAAD,CAAMC,GAAI,iBAAmBD,EAAKE,GAAlC,SAAuCF,EAAKG,QADrC,QAAUH,EAAKE,aCOnBE,MAff,WAAwB,IAChBF,EAAOG,cAAPH,GADe,EAELL,qBAAWR,GAApBS,EAFc,sBAGSQ,mBAAS,MAHlB,mBAGdC,EAHc,KAGLC,EAHK,KAQrB,OAHAC,qBAAU,WACRD,EAAWV,EAAMN,MAAMkB,MAAK,SAACV,GAAD,OAAUA,EAAKE,KAAOA,QACjD,CAACJ,EAAOI,IAET,kCACIK,EAAU,6CAAgBA,EAAQJ,QAAa,2BCavD,SAASQ,IAAU,IAAD,EAEUd,qBAAWR,GAFrB,mBAETS,EAFS,KAEFc,EAFE,KAehB,OAXAH,qBAAU,WACR,sBAAC,4BAAAzB,EAAA,sEACqBD,IADrB,OACOS,EADP,OAECoB,EAAS,2BACJd,GADG,IAENN,QACAC,QAAQ,KALX,0CAAD,KAQC,IAGD,oCACE,cAAC,IAAD,UACE,uDAEF,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,KAAK,oBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,cAQGC,MAhDf,WAAgB,IAAD,EACaR,mBAAS,CAAEd,MAAO,GAAIC,QAAQ,IAD3C,mBACNK,EADM,KACCc,EADD,KAGb,OACE,cAAClB,EAAD,CAAsBqB,MAAO,CAACjB,EAAOc,GAArC,SACE,cAACD,EAAD,OCTSK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.38a84f2f.chunk.js","sourcesContent":["\nconst domain = process.env.REACT_APP_API_DOMAIN + \"/api\";\n\nconst listInstitutions = async () => {\n    const resp = await fetch(`${domain}/institutions`);\n    return await resp.json();\n}\n\nexport { listInstitutions };","import React from \"react\";\n\nconst InstitutionsContext = React.createContext({ items: [], loaded: false});\n\nconst InstitutionsProvider = InstitutionsContext.Provider;\n\nexport { InstitutionsContext, InstitutionsProvider };\n","import { useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { InstitutionsContext } from \"../InstitutionsContext\";\n\nfunction Institutions() {\n  const [state] = useContext(InstitutionsContext);\n\n  return (\n    <section>\n      <h2>Bancos</h2>\n      <ul>\n        {state.items.map((item) => (\n          <li key={\"item_\" + item.id}>\n            <Link to={\"/institutions/\" + item.id}>{item.name}</Link>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Institutions;\n","import { useContext, useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { InstitutionsContext } from \"../InstitutionsContext\";\n\nfunction Institution() {\n  let { id } = useParams();\n  const [state] = useContext(InstitutionsContext);\n  const [current, setCurrent] = useState(null);\n  \n  useEffect(() => {\n    setCurrent(state.items.find((item) => item.id === id))\n  }, [state, id])\n  return (\n    <section>\n      { current ? <h2>Detalhe de {current.name}</h2> : <div></div> }\n    </section>\n  );\n}\n\nexport default Institution;\n","import { useState, useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Navbar } from \"@blueprintjs/core\";\nimport \"normalize.css/normalize.css\";\nimport \"@blueprintjs/core/lib/css/blueprint.css\";\n\nimport { listInstitutions } from './services/api'; \n\nimport {\n  InstitutionsContext,\n  InstitutionsProvider,\n} from \"./InstitutionsContext\";\n\nimport Institutions from \"./pages/Institutions\";\nimport Institution from \"./pages/Institution\";\n\nfunction App() {\n  const [state, setState] = useState({ items: [], loaded: false });\n\n  return (\n    <InstitutionsProvider value={[state, setState]}>\n      <Layout />\n    </InstitutionsProvider>\n  );\n}\n\n\nfunction Layout() {\n\n  const [state, setState] = useContext(InstitutionsContext);\n  \n  useEffect(() => {\n    (async () => {\n      const items = await listInstitutions();\n      setState({\n        ...state,\n        items,\n        loaded: true,\n      });\n    })();\n  }, []);\n\n  return (\n    <section>\n      <Navbar>\n        <h1>Open Banking Brasil</h1>\n      </Navbar>\n      <Router>\n        <Switch>\n          <Route path=\"/institutions/:id\">\n            <Institution></Institution>\n          </Route>\n          <Route path=\"/institutions\">\n            <Institutions></Institutions>\n          </Route>\n          <Route path=\"/\">\n            <Institutions></Institutions>\n          </Route>\n        </Switch>\n      </Router>\n    </section>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}